@use "sass:math";

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    :root {
        --background: 0, 0%, 7%;
        --foreground: 0 0% 98%;
        --card: 240 10% 3.9%;
        --card-foreground: 0 0% 98%;
        --popover: 240 10% 3.9%;
        --popover-foreground: 0 0% 98%;
        --primary: 0 0% 98%;
        --primary-foreground: 240 5.9% 10%;
        --secondary: 240 3.7% 15.9%;
        --secondary-foreground: 0 0% 98%;
        --muted: 240 3.7% 15.9%;
        --muted-foreground: 240 5% 64.9%;
        --accent: 240 3.7% 15.9%;
        --accent-foreground: 0 0% 98%;
        --accent-colorful: 43.26 96.41% 56.27%;
        --destructive: 0 72.22% 50.59%;
        --destructive-foreground: 0 0% 98%;
        --border: 240 3.7% 15.9%;
        --input: 240 3.7% 15.9%;
        --ring: 240 4.9% 83.9%;
        --radius: 0.5rem;
    }
}

@layer base {
    * {
        @apply border-border;
    }

    body {
        @apply bg-background text-foreground;
    }
}

@layer components {
    .letter-effect-text {
        &::before {
            content: attr(text);
        }
    }

    .letter-effect-text-animate {
        color: red;

        &::before {
            animation: 1s linear text-effect;
            color: hsl(var(--accent-colorful));
        }
    }
}


@keyframes text-effect {
    $frames: 10;

    @for $i from 0 to $frames {
        $percent: (
            $i / $frames) * 100%;
        $attr: frame#{$i};

        #{$percent} {
            content: attr($attr
            );
    }
}
}

@mixin shiny-cube($color1, $color2) {
    content: '';
    position: absolute;
    width: 300px;
    height: 300px;
    z-index: -30;
    /* border-radius: 50%; */
    background-color: #fff;
    box-shadow: 0 0 60px 30px #fff,
        /* inner white */
        0 0 100px 60px #f0f,
        /* middle magenta */
        0 0 140px 90px #0ff;
    /* outer cyan */
    ;
}

// Apply to specific existing elements
header::before,
main::before,
footer::before {
    @include shiny-cube(#f0f, #0ff);
    top: calc(50% - 150px);
    left: calc(50% - 150px);
}

// Using Loop to vary positions or other properties slightly (example)
@each $element, $offset in (header: 0%, main: 50%, footer: 100%) {
    #{$element}::before {
        top: calc(#{$offset} - 150px);
    }
}
